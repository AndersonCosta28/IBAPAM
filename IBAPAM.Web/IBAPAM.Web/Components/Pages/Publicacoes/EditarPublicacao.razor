@page "/publicacoes/editar-publicacao/{Id:int}"
@using IBAPAM.Shared.Models.PublicacaoDTOs
@using IBAPAM.Web.Client.Components
@using IBAPAM.Web.Client.Interfaces
@inject IPublicacaoService PublicacaoService
@inject NavigationManager Navigation
@inject ILogger<EditarPublicacao> _logger
@rendermode InteractiveAuto
<RadzenStack Style="padding: 20px">

    <RadzenText TextStyle="TextStyle.H3">Editar publicação</RadzenText>

    <RadzenTemplateForm Submit="atualizar" TItem="PublicacaoUpdateDto">
        <RadzenStack Gap="20px">
            <RadzenRow>
                <RadzenFormField Text="Título" Variant="Radzen.Variant.Outlined">
                    <ChildContent>
                        <RadzenTextBox Name="Titulo" @bind-Value=@this._publicacaoDto.Titulo />
                    </ChildContent>
                </RadzenFormField>
            </RadzenRow>
            <RadzenRow>
                <RadzenFormField Text="Conteúdo" Variant="Radzen.Variant.Outlined">
                    <RadzenHTMLEditorComponent Value="@this._publicacaoDto.Conteudo"
                                               ValueChanged="v=> this._publicacaoDto.Conteudo =v" />
                </RadzenFormField>
            </RadzenRow>
            <RadzenRow>
                <RadzenButton ButtonType="Radzen.ButtonType.Button" Click="PublicacaoService.NavegarParaTelaDeListagem">Cancelar</RadzenButton>
                <RadzenButton ButtonType="Radzen.ButtonType.Submit">Atualizar</RadzenButton>
            </RadzenRow>
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenStack>
@code {
    [Parameter] public int Id { get; set; }

    PublicacaoUpdateDto _publicacaoDto { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _logger.LogInformation($"{this.GetType().Name} - {nameof(OnInitializedAsync)}");
        await buscarPublicacao();

        await base.OnInitializedAsync();
    }

    async Task buscarPublicacao()
    {
        var dto = await PublicacaoService.GetByIdAsync(Id);

        this._publicacaoDto.Id = dto.Id;
        this._publicacaoDto.Titulo = dto.Titulo;
        this._publicacaoDto.Conteudo = dto.Conteudo;
    }

    private async Task atualizar()
    {
        await PublicacaoService.UpdateAsync(_publicacaoDto);
        PublicacaoService.NavegarParaTelaDeListagem();
    }
}